<?xml version="1.0"?>
<!--
  ~ Copyright 2015 Vincent Brison.
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~    http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<ruleset xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" name="Android Application Rules"
    xmlns="http://pmd.sf.net/ruleset/1.0.0"
    xsi:noNamespaceSchemaLocation="http://pmd.sf.net/ruleset_xml_schema.xsd"
    xsi:schemaLocation="http://pmd.sf.net/ruleset/1.0.0 http://pmd.sf.net/ruleset_xml_schema.xsd">

    <description>Custom ruleset for Android application</description>

    <exclude-pattern>.*/R.java</exclude-pattern>
    <exclude-pattern>.*/gen/.*</exclude-pattern>

    <rule ref="category/java/bestpractices.xml">
        <exclude name="PreserveStackTrace" />
    </rule>
    <rule ref="category/java/errorprone.xml">
        <!-- ButterKinfe is designed this way -->
        <exclude name="BeanMembersShouldSerialize" />
        <!-- I like it this way -->
        <exclude name="AssignmentInOperand" />
    </rule>
    <rule ref="category/java/multithreading.xml" />
    <rule ref="category/java/performance.xml">
        <!-- Android doesn't support Files.newInputStream, et al. -->
        <exclude name="AvoidFileStream" />
    </rule>
    <rule ref="category/java/codestyle.xml">
        <!-- Espresso is designed this way !-->
        <exclude name="TooManyStaticImports" />
        <!-- Android is designed this way -->
        <exclude name="AbstractNaming" />
        <exclude name="AtLeastOneConstructor" />
        <exclude name="CallSuperInConstructor" />
        <!-- Android only supports this after API 19 -->
        <exclude name="IdenticalCatchBranches" />
        <!-- ButterKnife is designed this way -->
        <exclude name="DefaultPackage" />
        <exclude name="CommentDefaultAccessModifier" />
        <!-- I like it this way -->
        <exclude name="LongVariable" />
        <exclude name="OnlyOneReturn" />
    </rule>
    <rule ref="category/java/design.xml">
        <!-- Android is designed this way -->
        <exclude name="ExcessiveImports" />
        <exclude name="LawOfDemeter" />
        <!-- broken rule -->
        <exclude name="LoosePackageCoupling" />
    </rule>
    <!-- Annotations are designed this way -->
    <rule ref="category/java/errorprone.xml/AvoidDuplicateLiterals">
        <properties>
            <property name="skipAnnotations" value="true"/>
        </properties>
    </rule>
    <!-- Android is designed this way -->
    <rule ref="category/java/design.xml/TooManyMethods">
        <properties>
            <property name="maxmethods" value="20"/>
        </properties>
    </rule>
    <!-- I like it this way -->
    <rule ref="category/java/codestyle.xml/ConfusingTernary">
        <properties>
            <property name="ignoreElseIf" value="true"/>
        </properties>
    </rule>
    <rule ref="category/java/codestyle.xml/ClassNamingConventions">
        <properties>
            <property name="utilityClassPattern" value="[A-Z][a-zA-Z0-9]+(Utils?|Helper|Fixer)"/>
        </properties>
    </rule>
</ruleset>
